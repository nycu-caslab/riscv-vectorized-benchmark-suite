# Modify the path in here
GCC_TOOLCHAIN_DIR?=/tools/gcc-riscv-linux-rvv/
GCC_PREFIX?=riscv64-unknown-elf
GEM5_DIR?=/path/to/gem5/
LLVM_DIR?=/path/to/LLVM/install/
QEMU_DIR?=/path/to/QEMU/


GCC=${GCC_TOOLCHAIN_DIR}bin/${GCC_PREFIX}-gcc
GCC_OBJDUMP=${GCC_TOOLCHAIN_DIR}bin/${GCC_PREFIX}-objdump

CLANG=${LLVM_DIR}/bin/clang
CLANG_OBJDUMP=${LLVM_DIR}/bin/llvm-objdump


start:
	if [ ! -d bin ]; then \
		mkdir bin; \
	else \
		echo bin dir exist; \
	fi

COMPILER ?= gcc
ifeq ($(COMPILER),gcc)
    RISCV_CC            := $(GCC)
    RISCV_C++           := ${GCC_TOOLCHAIN_DIR}bin/${GCC_PREFIX}-g++
    RISCV_DUMP          := $(GCC_OBJDUMP)
	RISCV_OBCP			:= ${GCC_TOOLCHAIN_DIR}bin/${GCC_PREFIX}-objcopy
    ARCH                := rv64gcv
    # LD_SCRIPT           := $(SW_DIR)/link.ld
else ifeq ($(COMPILER),llvm)
    # Pick the first clang executable in $PATH with version >= 14, or the
    # default clang if there is no clang >= 14; the individual steps are:
    #  - find all files containing 'clang*' in all directories in $PATH
    #  - use sed to select all those that match 'clang-[0-9]+'
    #  - use awk to select all those that end with a number >= 14
    #  - append 'clang' to that list in case there is no clang >= 14
    #  - select the first executable from that list
    RISCV_CC            := $(LLVM_DIR)bin/clang --target=riscv32
    RISCV_DUMP          := $(LLVM_DIR)bin/llvm-objdump
    RISCV_OBCP          := $(LLVM_DIR)bin/llvm-objcopy
    ARCH                := rv32imzve32x
    CC_SPECIFIC_OPTIONS := -fuse-ld=lld -Wno-unused-command-line-argument
    # LD_SCRIPT           := $(SW_DIR)/lld_link.ld
endif
